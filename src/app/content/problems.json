{
    "problems": [
        {
            "name": "Switching tabs",
            "number": 0,
            "description": "Switching tabs is a common task in web applications. It involves changing the active tab to display different content. This can be done using JavaScript to manipulate the DOM and update the active state of the tabs.",
            "component": "SwitchingTabsComponent",
            "tags": ["tabs", "navigation", "ui", "state", "hooks"],
            "difficulty": "easy",
            "providedContent": [
                {
                    "name": "Tab 1",
                    "content": "Content for Tab 1"
                },
                {
                    "name": "Tab 2",
                    "content": "Content for Tab 2"
                },
                {
                    "name": "Tab 3",
                    "content": "Content for Tab 3"
                }
            ]
        },
        {
            "name": "Basic Fetch",
            "number": 1,
            "description": "Fetch is a pretty basic API. Using just fetch and React hooks, fetch a query from the provided URL.",
            "component": "FetchComponent",
            "tags": ["state", "async", "fetch", "api", "hooks"],
            "difficulty": "easy",
            "providedContent": [
                {
                    "url": "https://jsonplaceholder.typicode.com/posts"
                }
            ]
        },
        {
            "name": "Linked sub-menu",
            "number": 2,
            "description": "Certain applications will often have a list of menus with headers that are embedded. Taking the parent header, implement a list that can open/close and contain child lists.",
            "component": "LinkedSubmenuComponent",
            "tags": ["state", "linked list"],
            "difficulty": "medium",
            "providedContent": [
                {
                    "type": "tree",
                    "nodes": [
                        {
                            "name": "Root",
                            "isDirectory": true,
                            "children": [
                                    {
                                    "name": "Layer 1",
                                    "isDirectory": true,
                                    "children": [{
                                        "name": "Layer 1.1",
                                        "isDirectory": false
                                    },{
                                        "name": "Layer 1.2",
                                        "isDirectory": false
                                    }]
                                },{
                                    "name": "Layer 2",
                                    "isDirectory": true,
                                    "children": [{
                                        "name": "Layer 2.1",
                                        "isDirectory": false
                                    },{
                                        "name": "Layer 2.2",
                                        "isDirectory": true,
                                        "children": [{
                                            "name": "Layer 2.2.1",
                                            "isDirectory": false
                                        }]
                                    }]
                                },
                                {
                                    "name": "Layer 3",
                                    "isDirectory": true
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "name": "Autocomplete",
            "number": 3,
            "description": "It's pretty common that we have inputs that have autocomplete. What kind of a structure would you expect the input to be? How would you parse that? The output from the API is a list of words and an integer that indicates how often they are searched.",
            "component": "AutocompleteComponent",
            "tags": ["state", "tree", "prefix tree", "binary search tree", "search"],
            "difficulty": "medium",
            "providedContent": [
                { "word": "apple", "weight": 42 },
                { "word": "apply", "weight": 17 },
                { "word": "banana", "weight": 89 },
                { "word": "band", "weight": 23 },
                { "word": "cat", "weight": 56 },
                { "word": "caterpillar", "weight": 34 },
                { "word": "catty", "weight": 78 },
                { "word": "excavate", "weight": 12 },
                { "word": "war", "weight": 45 },
                { "word": "world", "weight": 67 },
                { "word": "worn", "weight": 29 },
                { "word": "word", "weight": 91 }
              ]
        }
    ]
}